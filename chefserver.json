{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azure",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "chefServerSKU": {
      "defaultValue": "chefbyol",
      "type": "string",
      "metadata": {
        "description": "The Chef server image from which to create the Chef server"
      },
      "allowedValues": [
        "chefbyol",
        "azure_marketplace_25",
        "azure_marketplace_50",
        "azure_marketplace_100",
        "azure_marketplace_150",
        "azure_marketplace_200",
        "azure_marketplace_250"
      ]
    },
    "chefAdminUser": {
      "type": "string",
      "defaultValue": "admin",
      "metadata": {
        "description": "Admin user to create when setting up the Chef server"
      }
    },
    "chefAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to be set for the Chef Admin user"
      }
    },
    "chefAdminFirstname": {
      "type": "string",
      "defaultValue": "Admin",
      "metadata": {
        "description": "First name of the admin user"
      }
    },
    "chefAdminLastname": {
      "type": "string",
      "defaultValue": "Account",
      "metadata": {
        "description": "Last name of the admin user"
      }
    },
    "chefAdminEmail": {
      "type": "string",
      "metadata": {
        "description": "Email address of the admmin user"
      }
    },
    "chefOrganization": {
      "type": "string",
      "metadata": {
        "description": "Organization to create on the chef server"
      }
    },
    "customScriptURL": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/chef-partners/arm-chef-server/master/scripts/setup-chefserver.sh",
      "metadata": {
        "description": "URL to the the setup script"
      }
    }
  },
  "variables": {
    "storageAccountName": "[uniquestring(parameters('vmName'))]",
    "location": "[resourceGroup().location]",
    "dataDisk1VhdName": "datadisk1",
    "imagePublisher": "chef-software",
    "imageOffer": "chef-server",
    "OSDiskName": "chefserverdisk",
    "nicName": "myVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "myPublicIP",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmSize": "Standard_D1",
    "virtualNetworkName": "MyVNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "apiVersion": "2015-06-15",
    "chef_org_name": "[tolower(parameters('chefOrganization'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "plan": {
        "name": "[parameters('chefServerSku')]",
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('chefServerSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "100",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('dataDisk1VhdName'),'.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/ConfigureChefServer')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[parameters('customScriptURL')]"
          ],
          "commandToExecute": "[concat('/bin/bash setup-chefserver.sh -F ', parameters('dnsLabelPrefix'), '.', variables('location'), '.cloudapp.azure.com -u ', parameters('chefAdminUser'), ' -p ', parameters('chefAdminPassword'), ' -f ', parameters('chefAdminFirstname'), ' -l ', parameters('chefAdminLastname'), ' -e ', parameters('chefAdminEmail'), ' -o ', variables('chef_org_name'))]"
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn))]"
    },
    "chefServerUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('publicIPAddressName')).dnsSettings.fqdn), '/organizations/', toLower(parameters('chefOrganization')))]"
    },
    "starterKitPage": {
      "type": "string",
      "value": "[concat('https://', reference(variables('publicIPAddressName')).dnsSettings.fqdn), '/organizations/', variables('chef_org_name'), '/getting_started')]"
    }
  }
}
